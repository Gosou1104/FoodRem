#=====================================================================================
#                       Char.pm
#                             by Shinsuke Mori
#                             Last change 7 October 2008
#=====================================================================================

# 機  能 : 全角文字を扱うライブラリ (utf-8版、文字集合はeuc-jpと共通)
#
# 実  例 : なし
#
# 注意点 : 数字の扱い


#-------------------------------------------------------------------------------------
#                        declalations
#-------------------------------------------------------------------------------------
package Char_dev;
use Exporter;
our @ISA = qw(Exporter);
our @EXPORT = qw(getKkciArray getKkciRegExp);
use encoding "utf-8";
use strict;

#-------------------------------------------------------------------------------------
#                        リストとハッシュの設定
#-------------------------------------------------------------------------------------

my @SIGN     = qw(    　 、 。 ， ． ・ ： ； ？ ！ ゛ ゜ ´ ｀ ¨
                ＾ ￣ ＿ ヽ ヾ ゝ ゞ 〃 仝 々 〆 〇 ー ― ‐ ／
                ＼ 〜 ‖ ｜ … ‥ ‘ ’ “ ” （ ） 〔 〕 ［ ］
                ｛ ｝ 〈 〉 《 》 「 」 『 』 【 】 ＋ − ± ×
                ÷ ＝ ≠ ＜ ＞ ≦ ≧ ∞ ∴ ♂ ♀ ° ′ ″ ℃ ￥
                ＄ ¢ £ ％ ＃ ＆ ＊ ＠ § ☆ ★ ○ ● ◎ ◇ 
                   ◆ □ ■ △ ▲ ▽ ▼ ※ 〒 → ← ↑ ↓ 〓 �
                � � � � � � � � � � ∈ ∋ ⊆ ⊇ ⊂ ⊃
                ∪ ∩ � � � � � � � � ∧ ∨ ¬ ⇒ ⇔ ∀
                ∃ � � � � � � � � � � � ∠ ⊥ ⌒ ∂
                ∇ ≡ ≒ ≪ ≫ √ ∽ ∝ ∵ ∫ ∬ � � � � �
                � � Å ‰ ♯ ♭ ♪ † ‡ ¶ � � � � ◯   
                   ─ │ ┌ ┐ ┘ └ ├ ┬ ┤ ┴ ┼ ━ ┃ ┏ ┓
                ┛ ┗ ┣ ┳ ┫ ┻ ╋ ┠ ┯ ┨ ┷ ┿ ┝ ┰ ┥ ┸
                ╂ );
my %SIGN     = map(($_ => 1), @SIGN);

my @NUMBER   = qw( ０ １ ２ ３ ４ ５ ６ ７ ８ ９ );
my %NUMBER   = map(($_ => 1), @NUMBER);


my @HIRAGANA = qw(    ぁ あ ぃ い ぅ う ぇ え ぉ お か が き ぎ く 
                ぐ け げ こ ご さ ざ し じ す ず せ ぜ そ ぞ た
                だ ち ぢ っ つ づ て で と ど な に ぬ ね の は
                ば ぱ ひ び ぴ ふ ぶ ぷ へ べ ぺ ほ ぼ ぽ ま み
                む め も ゃ や ゅ ゆ ょ よ ら り る れ ろ ゎ わ
                ゐ ゑ を ん );
my %HIRAGANA = map(($_ => 1), @HIRAGANA);

my @KATAKANA = qw(    ァ ア ィ イ ゥ ウ ェ エ ォ オ カ ガ キ ギ ク
                グ ケ ゲ コ ゴ サ ザ シ ジ ス ズ セ ゼ ソ ゾ タ
                ダ チ ヂ ッ ツ ヅ テ デ ト ド ナ ニ ヌ ネ ノ ハ
                バ パ ヒ ビ ピ フ ブ プ ヘ ベ ペ ホ ボ ポ マ ミ
                ム メ モ ャ ヤ ュ ユ ョ ヨ ラ リ ル レ ロ ヮ ワ
                ヰ ヱ ヲ ン ヴ ヵ ヶ ー );
my %KATAKANA = map(($_ => 1), @KATAKANA);


my @LATINU   = qw(    Ａ Ｂ Ｃ Ｄ Ｅ Ｆ Ｇ Ｈ Ｉ Ｊ Ｋ Ｌ Ｍ Ｎ Ｏ
                Ｐ Ｑ Ｒ Ｓ Ｔ Ｕ Ｖ Ｗ Ｘ Ｙ Ｚ );
my %LATINU   = map(($_ => 1), @LATINU);

my @LATIND   = qw(    ａ ｂ ｃ ｄ ｅ ｆ ｇ ｈ ｉ ｊ ｋ ｌ ｍ ｎ ｏ
                ｐ ｑ ｒ ｓ ｔ ｕ ｖ ｗ ｘ ｙ ｚ );
my %LATIND   = map(($_ => 1), @LATIND);


my @GREEKU   = qw(    Α Β Γ Δ Ε Ζ Η Θ Ι Κ Λ Μ Ν Ξ Ο
                Π Ρ Σ Τ Υ Φ Χ Ψ Ω );
my %GREEKU   = map(($_ => 1), @GREEKU);

my @GREEKD   = qw(    α β γ δ ε ζ η θ ι κ λ μ ν ξ ο
                π ρ σ τ υ φ χ ψ ω );
my %GREEKD   = map(($_ => 1), @GREEKD);


my @CYRILU   = qw(    А Б В Г Д Е Ё Ж З И Й К Л М Н
                О П Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы Ь Э
                Ю Я );
my %CYRILU   = map(($_ => 1), @CYRILU);

my @CYRILD   = qw(    а б в г д е ё ж з и й к л м н
                о п р с т у ф х ц ч ш щ ъ ы ь э
                ю я );
my %CYRILD   = map(($_ => 1), @CYRILD);


#-------------------------------------------------------------------------------------

# 仮名漢字変換の入力

my @KKCInput = (@LATINU, @NUMBER,           # 英数字
             @HIRAGANA, qw( ヴ ヵ ヶ ),           # 平仮名, 片仮名のみの文字
             qw( ー ＝ ￥ ｀ 「 」 ； ’ 、 。 ), 
             qw( ！ ＠ ＃ ＄ ％ ＾ ＆ ＊ （ ） ＿ ＋ ｜ 〜 ｛ ｝ ： ” ＜ ＞ ？ ),
             qw( ・ ));                           # for JP106 keyboard
my %KKCInput = map(($_ => 1), @KKCInput);

#-------------------------------------------------------------------------------------

sub getKkciArray {
    return @KKCInput;
}

sub getKkciRegExp {
    my @EXP_KKCI = (@KKCInput, @KATAKANA, @LATIND, "　");
    @EXP_KKCI = sort keys %{{ map {$_ => 1} @EXP_KKCI }}; # 重複削除
    my $EXP_KKCI = join("|", @EXP_KKCI);
    return $EXP_KKCI;
}
#-------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------
#                        return
#-------------------------------------------------------------------------------------

1;


#=====================================================================================
#                        END
#=====================================================================================
